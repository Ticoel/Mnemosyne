<Window x:Class="Mnemosyne.Desktop.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:Mnemosyne.Desktop.Views"
        xmlns:viewsmodels="clr-namespace:Mnemosyne.ViewModels"
		xmlns:helpers="clr-namespace:Mnemosyne.Desktop.Helpers"
		mc:Ignorable="d"
        Title="Mnemosyne"
		MinWidth="600"
		MinHeight="480" Background="Black">
	<Window.DataContext>
		<viewsmodels:MainViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<helpers:FontSizeToIntConverter x:Key="FontSizeToIntConverter"/>
		<helpers:PathToFileNameConverter x:Key="PathToFileNameConverter"/>
		<helpers:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
		<helpers:OctetToMebioctetConverter x:Key="OctetToMebioctetConverter"/>
		<helpers:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"/>
		<Style x:Key="TextBlockStyle" TargetType="TextBlock">
			<Setter Property="FontSize" Value="{Binding Path=FontSize, Converter={StaticResource FontSizeToIntConverter}, Mode=OneWay}"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFE04949"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFE92727"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFC33838"/>
		<Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Padding="8">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonTextBlockStyle" TargetType="{x:Type TextBlock}">
			<Setter Property="FontSize" Value="{Binding FontSize, Converter={StaticResource FontSizeToIntConverter}, Mode=OneWay}"/>
			<Setter Property="Foreground" Value="Black"/>
		</Style>
	</Window.Resources>
	<ScrollViewer>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="2.5*"/>
				<RowDefinition Height="5.5*"/>
				<RowDefinition Height="1*"/>
			</Grid.RowDefinitions>
			<TextBlock
				Grid.Row="0"
				HorizontalAlignment="Center"
				VerticalAlignment="Bottom"
				Style="{DynamicResource TextBlockStyle}"
				Text="Mnemosyne"/>
			<Grid
				Grid.Row="1"
				HorizontalAlignment="Center"
				VerticalAlignment="Center">
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>
				<StackPanel
					Grid.Row="0"
					Orientation="Horizontal"
					HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<Button
						Command="{Binding Path=CMDSelectSource, Mode=OneTime}" Margin="0,0,6,6" Style="{DynamicResource ButtonStyle}">
						<TextBlock
							Style="{DynamicResource ButtonTextBlockStyle}"
							Text="{Binding Path=SourcePath, Converter={StaticResource PathToFileNameConverter}, ConverterParameter=Source, Mode=OneWay}"/>
					</Button>
					<TextBlock
						Style="{StaticResource TextBlockStyle}"
						Text="To" Margin="6,0,6,6"/>
					<Button
						Command="{Binding Path=CMDSelectTarget, Mode=OneTime}" Margin="6,0,0,6" Style="{DynamicResource ButtonStyle}">
						<TextBlock
							Style="{DynamicResource ButtonTextBlockStyle}"
							Text="{Binding Path=TargetPath, Converter={StaticResource PathToFileNameConverter}, ConverterParameter=Target, Mode=OneWay}"/>
					</Button>
				</StackPanel>
				<StackPanel
					Grid.Row="1"
					Orientation="Horizontal"
					HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<Button
						Command="{Binding Path=CMDNavigateToSetting, Mode=OneTime}" Margin="0,6,6,0" Style="{DynamicResource ButtonStyle}">
						<TextBlock
							Style="{DynamicResource ButtonTextBlockStyle}"
							Text="Setting"/>
					</Button>
					<Button
						Command="{Binding Path=CMDStart, Mode=OneTime}" Margin="6,6,6,0" Style="{DynamicResource ButtonStyle}">
						<TextBlock
							Style="{DynamicResource ButtonTextBlockStyle}"
							Text="Start"/>
					</Button>
					<Button
						Margin="6,6,0,0"
						Style="{DynamicResource ButtonStyle}"
						Command="{Binding Path=CMDCancel, Mode=OneTime}">
						<TextBlock
							Style="{DynamicResource ButtonTextBlockStyle}"
							Text="Cancel"/>
					</Button>
				</StackPanel>
				<StackPanel
					Grid.Row="2"
					Orientation="Horizontal"
					Visibility="Visible">
					<TextBlock
						Margin="6"
						Style="{DynamicResource TextBlockStyle}"
						Text="{Binding Path=Speed, Converter={StaticResource OctetToMebioctetConverter}, Mode=OneWay}"/>
					<TextBlock
						Margin="6"
						Style="{DynamicResource TextBlockStyle}"
						Text="{Binding Path=ElapsedTime, Converter={StaticResource TimeSpanToStringConverter}, ConverterParameter='Elapsed time: ', Mode=OneWay}"/>
					<TextBlock
						Margin="6"
						Style="{DynamicResource TextBlockStyle}"				
						Text="{Binding Path=RemainingTime, Converter={StaticResource TimeSpanToStringConverter}, ConverterParameter='Remaining time: ', Mode=OneWay}"/>
				</StackPanel>
			</Grid>
			<Grid
				Grid.Row="2">
				<ProgressBar
					Maximum="{Binding Path=ItemCount, Mode=OneWay}"
					Value="{Binding Path=ItemPosition, Mode=OneWay}" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"/>
				<TextBlock
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Style="{StaticResource TextBlockStyle}"
					Text="{Binding Path=Output, Mode=OneWay}"/>
			</Grid>
		</Grid>
	</ScrollViewer>
</Window>
